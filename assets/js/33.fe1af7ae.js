(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{455:function(_,v,t){"use strict";t.r(v);var a=t(3),s=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1"}},[_._v("#")]),_._v(" 1")]),_._v(" "),v("p",[_._v("是否有多人认为程序员的工作就是复制粘贴？为什么？")]),_._v(" "),v("p",[_._v("就是复制粘贴，所谓复用，90%的时候就是打破重粘贴。 所谓架构，就是知道去抄啥； 所谓开发，就是老大说抄我就抄； 所谓初级开发工程师，就是东看看西看看，瞧瞧别人怎么抄，自己跟着抄；\n所谓高级开发工程师，就是同一个模块抄过一遍的人，第二遍更熟点。 座右铭1：Github搬运工 座右铭2：有现成的用现成的，没现成的找现成的，找不到就不做了，对外宣称无法实现。 座右铭3：我们不是在抄，我们做的叫\n“系统集成”很多人做了几年觉得没有创造没有提高就转行了，所以每年才会招很多应届生补充进来，来填补空缺，比如即将毕业你们。所以，应届生，不要阳春白雪，养着宠物喝着咖啡，敲几千行改变世界的代码，从此华丽转身。代码还是几千行，只是每天几千行，为啥那么快？抄呗！")]),_._v(" "),v("p",[_._v("所谓搬砖几乎不需要封装，因为大部分只用一次，今天把砖头从东搬到西明天又从西搬到东搬回来，后天又回去，既然如此任何封装都是容易过度，不比老实搬砖复制来的直接高效。就像正则表达式，每次都重写，写熟了后也并不需要想着封装复用下老的，每次重写为主，复制改写为辅。搬砖搬多了也和写正则一样，每次重写即可，简单高效，无需封装。")]),_._v(" "),v("h2",{attrs:{id:"_2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2"}},[_._v("#")]),_._v(" 2")]),_._v(" "),v("p",[_._v("记住，砖是搬不完的，你搬累了，又有人来接替你搬了。不要天真谈创造，现在不是单干的时代，远离个人英雄主义，你的所有成绩来自集体，个人离开集体啥都不是，没有谁是不可替代的，少了谁地球一样转。")]),_._v(" "),v("p",[_._v("戒骄戒躁，努力做好社会主义的螺丝钉，凡事就怕认真二字。简单的事情重复做，你就是专家；重复的事情用心做，你就是行家！再小的地方，他也能干出成绩！")]),_._v(" "),v("p",[_._v("知道要搬运哪一段到哪里来解决哪个问题”就已经是个要消耗大量时间精力才能掌握的技能了")]),_._v(" "),v("h2",{attrs:{id:"_3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3"}},[_._v("#")]),_._v(" 3")]),_._v(" "),v("p",[_._v("是否有多人认为程序员的工作就是复制粘贴？为什么？")]),_._v(" "),v("p",[_._v("就是复制粘贴，所谓复用，90%的时候就是打破重粘贴。 所谓架构，就是知道去抄啥； 所谓开发，就是老大说抄我就抄； 所谓初级开发工程师，就是东看看西看看，瞧瞧别人怎么抄，自己跟着抄；\n所谓高级开发工程师，就是同一个模块抄过一遍的人，第二遍更熟点。 座右铭1：Github搬运工 座右铭2：有现成的用现成的，没现成的找现成的，找不到就不做了，对外宣称无法实现。 座右铭3：我们不是在抄，我们做的叫\n“系统集成”很多人做了几年觉得没有创造没有提高就转行了，所以每年才会招很多应届生补充进来，来填补空缺，比如即将毕业你们。所以，应届生，不要阳春白雪，养着宠物喝着咖啡，敲几千行改变世界的代码，从此华丽转身。代码还是几千行，只是每天几千行，为啥那么快？抄呗！")]),_._v(" "),v("p",[_._v("所谓搬砖几乎不需要封装，因为大部分只用一次，今天把砖头从东搬到西明天又从西搬到东搬回来，后天又回去，既然如此任何封装都是容易过度，不比老实搬砖复制来的直接高效。就像正则表达式，每次都重写，写熟了后也并不需要想着封装复用下老的，每次重写为主，复制改写为辅。搬砖搬多了也和写正则一样，每次重写即可，简单高效，无需封装。")]),_._v(" "),v("h2",{attrs:{id:"_4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4"}},[_._v("#")]),_._v(" 4")]),_._v(" "),v("p",[_._v("记住，砖是搬不完的，你搬累了，又有人来接替你搬了。不要天真谈创造，现在不是单干的时代，远离个人英雄主义，你的所有成绩来自集体，个人离开集体啥都不是，没有谁是不可替代的，少了谁地球一样转。")]),_._v(" "),v("p",[_._v("戒骄戒躁，努力做好社会主义的螺丝钉，凡事就怕认真二字。简单的事情重复做，你就是专家；重复的事情用心做，你就是行家！再小的地方，他也能干出成绩！")]),_._v(" "),v("p",[_._v("知道要搬运哪一段到哪里来解决哪个问题”就已经是个要消耗大量时间精力才能掌握的技能了")]),_._v(" "),v("h2",{attrs:{id:"_5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5"}},[_._v("#")]),_._v(" 5")]),_._v(" "),v("p",[_._v("是否有多人认为程序员的工作就是复制粘贴？为什么？")]),_._v(" "),v("p",[_._v("就是复制粘贴，所谓复用，90%的时候就是打破重粘贴。 所谓架构，就是知道去抄啥； 所谓开发，就是老大说抄我就抄； 所谓初级开发工程师，就是东看看西看看，瞧瞧别人怎么抄，自己跟着抄；\n所谓高级开发工程师，就是同一个模块抄过一遍的人，第二遍更熟点。 座右铭1：Github搬运工 座右铭2：有现成的用现成的，没现成的找现成的，找不到就不做了，对外宣称无法实现。 座右铭3：我们不是在抄，我们做的叫\n“系统集成”很多人做了几年觉得没有创造没有提高就转行了，所以每年才会招很多应届生补充进来，来填补空缺，比如即将毕业你们。所以，应届生，不要阳春白雪，养着宠物喝着咖啡，敲几千行改变世界的代码，从此华丽转身。代码还是几千行，只是每天几千行，为啥那么快？抄呗！")]),_._v(" "),v("p",[_._v("所谓搬砖几乎不需要封装，因为大部分只用一次，今天把砖头从东搬到西明天又从西搬到东搬回来，后天又回去，既然如此任何封装都是容易过度，不比老实搬砖复制来的直接高效。就像正则表达式，每次都重写，写熟了后也并不需要想着封装复用下老的，每次重写为主，复制改写为辅。搬砖搬多了也和写正则一样，每次重写即可，简单高效，无需封装。")]),_._v(" "),v("h2",{attrs:{id:"_6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6"}},[_._v("#")]),_._v(" 6")]),_._v(" "),v("p",[_._v("记住，砖是搬不完的，你搬累了，又有人来接替你搬了。不要天真谈创造，现在不是单干的时代，远离个人英雄主义，你的所有成绩来自集体，个人离开集体啥都不是，没有谁是不可替代的，少了谁地球一样转。")]),_._v(" "),v("p",[_._v("戒骄戒躁，努力做好社会主义的螺丝钉，凡事就怕认真二字。简单的事情重复做，你就是专家；重复的事情用心做，你就是行家！再小的地方，他也能干出成绩！")]),_._v(" "),v("p",[_._v("知道要搬运哪一段到哪里来解决哪个问题”就已经是个要消耗大量时间精力才能掌握的技能了")]),_._v(" "),v("h2",{attrs:{id:"_7"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7"}},[_._v("#")]),_._v(" 7")]),_._v(" "),v("p",[_._v("是否有多人认为程序员的工作就是复制粘贴？为什么？")]),_._v(" "),v("p",[_._v("就是复制粘贴，所谓复用，90%的时候就是打破重粘贴。 所谓架构，就是知道去抄啥； 所谓开发，就是老大说抄我就抄； 所谓初级开发工程师，就是东看看西看看，瞧瞧别人怎么抄，自己跟着抄；\n所谓高级开发工程师，就是同一个模块抄过一遍的人，第二遍更熟点。 座右铭1：Github搬运工 座右铭2：有现成的用现成的，没现成的找现成的，找不到就不做了，对外宣称无法实现。 座右铭3：我们不是在抄，我们做的叫\n“系统集成”很多人做了几年觉得没有创造没有提高就转行了，所以每年才会招很多应届生补充进来，来填补空缺，比如即将毕业你们。所以，应届生，不要阳春白雪，养着宠物喝着咖啡，敲几千行改变世界的代码，从此华丽转身。代码还是几千行，只是每天几千行，为啥那么快？抄呗！")]),_._v(" "),v("p",[_._v("所谓搬砖几乎不需要封装，因为大部分只用一次，今天把砖头从东搬到西明天又从西搬到东搬回来，后天又回去，既然如此任何封装都是容易过度，不比老实搬砖复制来的直接高效。就像正则表达式，每次都重写，写熟了后也并不需要想着封装复用下老的，每次重写为主，复制改写为辅。搬砖搬多了也和写正则一样，每次重写即可，简单高效，无需封装。")]),_._v(" "),v("h2",{attrs:{id:"_8"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8"}},[_._v("#")]),_._v(" 8")]),_._v(" "),v("p",[_._v("记住，砖是搬不完的，你搬累了，又有人来接替你搬了。不要天真谈创造，现在不是单干的时代，远离个人英雄主义，你的所有成绩来自集体，个人离开集体啥都不是，没有谁是不可替代的，少了谁地球一样转。")]),_._v(" "),v("p",[_._v("戒骄戒躁，努力做好社会主义的螺丝钉，凡事就怕认真二字。简单的事情重复做，你就是专家；重复的事情用心做，你就是行家！再小的地方，他也能干出成绩！")]),_._v(" "),v("p",[_._v("知道要搬运哪一段到哪里来解决哪个问题”就已经是个要消耗大量时间精力才能掌握的技能了")]),_._v(" "),v("h2",{attrs:{id:"_9"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9"}},[_._v("#")]),_._v(" 9")]),_._v(" "),v("p",[_._v("是否有多人认为程序员的工作就是复制粘贴？为什么？")]),_._v(" "),v("p",[_._v("就是复制粘贴，所谓复用，90%的时候就是打破重粘贴。 所谓架构，就是知道去抄啥； 所谓开发，就是老大说抄我就抄； 所谓初级开发工程师，就是东看看西看看，瞧瞧别人怎么抄，自己跟着抄；\n所谓高级开发工程师，就是同一个模块抄过一遍的人，第二遍更熟点。 座右铭1：Github搬运工 座右铭2：有现成的用现成的，没现成的找现成的，找不到就不做了，对外宣称无法实现。 座右铭3：我们不是在抄，我们做的叫\n“系统集成”很多人做了几年觉得没有创造没有提高就转行了，所以每年才会招很多应届生补充进来，来填补空缺，比如即将毕业你们。所以，应届生，不要阳春白雪，养着宠物喝着咖啡，敲几千行改变世界的代码，从此华丽转身。代码还是几千行，只是每天几千行，为啥那么快？抄呗！")]),_._v(" "),v("p",[_._v("所谓搬砖几乎不需要封装，因为大部分只用一次，今天把砖头从东搬到西明天又从西搬到东搬回来，后天又回去，既然如此任何封装都是容易过度，不比老实搬砖复制来的直接高效。就像正则表达式，每次都重写，写熟了后也并不需要想着封装复用下老的，每次重写为主，复制改写为辅。搬砖搬多了也和写正则一样，每次重写即可，简单高效，无需封装。")]),_._v(" "),v("h2",{attrs:{id:"_10"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10"}},[_._v("#")]),_._v(" 10")]),_._v(" "),v("p",[_._v("记住，砖是搬不完的，你搬累了，又有人来接替你搬了。不要天真谈创造，现在不是单干的时代，远离个人英雄主义，你的所有成绩来自集体，个人离开集体啥都不是，没有谁是不可替代的，少了谁地球一样转。")]),_._v(" "),v("p",[_._v("戒骄戒躁，努力做好社会主义的螺丝钉，凡事就怕认真二字。简单的事情重复做，你就是专家；重复的事情用心做，你就是行家！再小的地方，他也能干出成绩！")]),_._v(" "),v("p",[_._v("知道要搬运哪一段到哪里来解决哪个问题”就已经是个要消耗大量时间精力才能掌握的技能了")])])}),[],!1,null,null,null);v.default=s.exports}}]);